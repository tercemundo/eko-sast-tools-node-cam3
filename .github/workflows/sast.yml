name: sast

on:
  push:
    branches: [ "prueba" ]

jobs:

  secrets:
    name: Scan Secret HORUSEC
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Horusec
      continue-on-error: true
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/master/deployments/scripts/install.sh | bash -s latest
        horusec start -p="./" -e="true" -o="json" -O="./horusec.json" 
    - uses: actions/upload-artifact@v3
      with:
        name: horusec
        path: horusec.json
    - name: tanasec 
      env:
        ALLOW_FAILURE: true
        TOOLS: horusec
        FILE: horusec.json
        CRITICAL: 5
      run: docker run --rm -i -v $(pwd)/horusec.json:/app/horusec.json:z -e FILE=$FILE -e TOOLS=$TOOLS -e ALLOW_FAILURE=$ALLOW_FAILURE -e CRITICAL=$CRITICAL roxsross12/tanasec:1.0.0  
      
  linter:
    name: linter dockerfile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install hadolint
      continue-on-error: true
      run: docker run --rm -i hadolint/hadolint < Dockerfile

  trivy:
    name: trivy scan
    runs-on: ubuntu-20.04
    permissions:
      # required for all workflows
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        run: |
          docker build -t trivy-image:${{ github.sha }} .
#security github
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'trivy-image:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: 'trivy-image:${{ github.sha }}'
          format: 'json'
          output: 'trivy-results.json'
          severity: 'HIGH'
          exit-code: '1'
      - uses: actions/upload-artifact@v3
        with:
          name: trivy
          path: trivy-results.json     

  npmaudit:
    name: npm audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16'
    - run: npm audit --registry=https://registry.npmjs.org  --json > report_npmaudit.json
      continue-on-error: true   
    - uses: actions/upload-artifact@v3
      with:
        name: npm audit
        path: report_npmaudit.json        

  scanning:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@v1.16.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA:  ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}      